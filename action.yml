name: Test-PSModule (by PSModule)
description: Test a PowerShell module before publishing the module to the PowerShell Gallery.
author: PSModule
branding:
  icon: check-square
  color: gray-dark

inputs:
  Name:
    description: The name of the module to test. The name of the repository is used if not specified.
    required: false
  Settings:
    description: The type of tests to run. Can be either 'Module' or 'SourceCode'.
    required: true
  Debug:
    description: Enable debug output.
    required: false
    default: 'false'
  Verbose:
    description: Enable verbose output.
    required: false
    default: 'false'
  Version:
    description: Specifies the version of the GitHub module to be installed. The value must be an exact version.
    required: false
  Prerelease:
    description: Allow prerelease versions if available.
    required: false
    default: 'false'
  WorkingDirectory:
    description: The working directory to use for the action. This is the root folder where tests and outputs are expected.
    required: false
    default: '.'

outputs:
  Outcome:
    description: |
      The outcome of the test run.
    value: ${{ steps.test.outcome }}
  Conclusion:
    description: |
      The conclusion of the test run.
    value: ${{ steps.test.conclusion }}
  Executed:
    description: |
      Whether tests were executed.
    value: ${{ steps.test.outputs.Executed }}
  Result:
    description: |
      Overall result of the Pester test run (e.g., Passed, Failed).
    value: ${{ steps.test.outputs.Result }}
  FailedCount:
    description: |
      Number of failed tests.
    value: ${{ steps.test.outputs.FailedCount }}
  FailedBlocksCount:
    description: |
      Number of failed blocks.
    value: ${{ steps.test.outputs.FailedBlocksCount }}
  FailedContainersCount:
    description: |
      Number of failed containers.
    value: ${{ steps.test.outputs.FailedContainersCount }}
  PassedCount:
    description: |
      Number of passed tests.
    value: ${{ steps.test.outputs.PassedCount }}
  SkippedCount:
    description: |
      Number of skipped tests.
    value: ${{ steps.test.outputs.SkippedCount }}
  InconclusiveCount:
    description: |
      Number of inconclusive tests.
    value: ${{ steps.test.outputs.InconclusiveCount }}
  NotRunCount:
    description: |
      Number of tests not run.
    value: ${{ steps.test.outputs.NotRunCount }}
  TotalCount:
    description: |
      Total count of tests.
    value: ${{ steps.test.outputs.TotalCount }}

runs:
  using: composite
  steps:
    - name: Install-PSModuleHelpers
      uses: PSModule/Install-PSModuleHelpers@v1

    - name: Get test paths
      shell: pwsh
      id: paths
      working-directory: ${{ inputs.WorkingDirectory }}
      env:
        PSMODULE_TEST_PSMODULE_INPUT_Name: ${{ inputs.Name }}
        PSMODULE_TEST_PSMODULE_INPUT_Settings: ${{ inputs.Settings }}
      run: |
        # Get test paths
        ${{ github.action_path }}/scripts/main.ps1

    - name: Invoke-Pester
      uses: PSModule/Invoke-Pester@v4
      id: test
      env:
        LocalTestPath: ${{ fromJson(steps.paths.outputs.result).LocalTestPath }}
        WorkingDirectory: ${{ fromJson(steps.paths.outputs.result).WorkingDirectory }}
      with:
        Debug: ${{ inputs.Debug }}
        Prerelease: ${{ inputs.Prerelease }}
        Verbose: ${{ inputs.Verbose }}
        Version: ${{ inputs.Version }}
        WorkingDirectory: ${{ inputs.WorkingDirectory }}
        TestResult_TestSuiteName: ${{ inputs.Settings }}-${{ runner.os }}
        CodeCoverage_CoveragePercentTarget: 0
        Path: ${{ fromJson(steps.paths.outputs.result).TestPath }}
        Run_Path: ${{ fromJson(steps.paths.outputs.result).CodePath }}
