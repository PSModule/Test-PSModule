name: Test-PSModule (by PSModule)
description: Test a PowerShell module before publishing the module to the PowerShell Gallery.
author: PSModule
branding:
  icon: check-square
  color: gray-dark

inputs:
  Name:
    description: The name of the module to test. The name of the repository is used if not specified.
    required: false
  Settings:
    description: The type of tests to run. Can be either 'Module' or 'SourceCode'.
    required: true
  Debug:
    description: Enable debug output.
    required: false
    default: 'false'
  Verbose:
    description: Enable verbose output.
    required: false
    default: 'false'
  Version:
    description: Specifies the version of the GitHub module to be installed. The value must be an exact version.
    required: false
  Prerelease:
    description: Allow prerelease versions if available.
    required: false
    default: 'false'
  WorkingDirectory:
    description: The working directory to use for the action. This is the root folder where tests and outputs are expected.
    required: false
    default: ${{ github.workspace }}

runs:
  using: composite
  steps:
    - name: Get test paths
      uses: PSModule/Github-Script@v1
      id: paths
      env:
        PSMODULE_TEST_PSMODULE_INPUT_Name: ${{ inputs.Name }}
        PSMODULE_TEST_PSMODULE_INPUT_Settings: ${{ inputs.Settings }}
        PSMODULE_TEST_PSMODULE_INPUT_WorkingDirectory: ${{ inputs.WorkingDirectory }}
      with:
        Debug: ${{ inputs.Debug }}
        Prerelease: ${{ inputs.Prerelease }}
        Verbose: ${{ inputs.Verbose }}
        Version: ${{ inputs.Version }}
        WorkingDirectory: ${{ inputs.WorkingDirectory }}
        Script: ${{ github.action_path }}/scripts/main.ps1

    - name: Invoke-Pester
      uses: PSModule/Invoke-Pester@v3
      id: test
      env:
        LocalTestPath: ${{ fromJson(steps.paths.outputs.result).LocalTestPath }}
        WorkingDirectory: ${{ fromJson(steps.paths.outputs.result).WorkingDirectory }}
      with:
        Debug: ${{ inputs.Debug }}
        Prerelease: ${{ inputs.Prerelease }}
        Verbose: ${{ inputs.Verbose }}
        Version: ${{ inputs.Version }}
        WorkingDirectory: ${{ inputs.WorkingDirectory }}
        TestResult_TestSuiteName: ${{ inputs.Settings }}-${{ runner.os }}
        Path: ${{ fromJson(steps.paths.outputs.result).TestPath }}
        Run_Path: ${{ fromJson(steps.paths.outputs.result).CodePath }}
